datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  balances BalancesOnUsers[]

}

model Password {
  hash String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Balance  {
  id String @id @default(cuid())
  name String 
  value Int 
  description String?
  category String?  
  users BalancesOnUsers[]
  categories BalanceOnCategory[]
}
model CategoryBalance {
  id String @id @default(cuid())
  name String @unique
  description String?
  balances BalanceOnCategory[]
}


//relations
model BalancesOnUsers {
  userId String
  user User @relation(fields: [userId], references: [id]) 
  balanceId String
  balance Balance @relation(fields: [balanceId], references: [id])
  assignedAt DateTime @default(now())
  assignedBy String?
  @@id([userId, balanceId])
}

model BalanceOnCategory {
  balanceId String
  balance Balance @relation(fields: [balanceId], references: [id]) 
  categoryId String
  state CategoryBalance @relation(fields: [categoryId], references: [id])
  @@id([balanceId, categoryId])
}


model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}
