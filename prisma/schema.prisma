datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique
  nome String?
  cognome String?

  admin Boolean?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  notes    Note[]
  imports ImportsOnUsers[]

}

model Password {
  hash String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Import  {
  id String @id @default(cuid())
  created_at DateTime @default(now())
  name String 
  value Int 
  fixed Boolean?
  entry Boolean
  start_date DateTime?
  update_date DateTime?
  due_date DateTime?
  description String?
  category String?  
  users ImportsOnUsers[]
  categories ImportsOnCategory[]
}
model CategoryImport {
  id String @id @default(cuid())
  name String @unique
  description String?
  imports ImportsOnCategory[]
}


//relations
model ImportsOnUsers {
  userId String
  user User @relation(fields: [userId], references: [id]) 
  importId String
  imports Import @relation(fields: [importId], references: [id])
  assignedAt DateTime @default(now())
  assignedBy String?
  @@id([userId, importId])
}

model ImportsOnCategory {
  importId String
  import Import @relation(fields: [importId], references: [id]) 
  categoryId String
  category CategoryImport @relation(fields: [categoryId], references: [id])
  @@id([importId, categoryId])
}


model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}
